How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    it showed exactly which line of code has changed and helped us spot typos and mistakes

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    yes, at times our approaches might turn out to be less useful or we want to revert back to a previous version

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
pros: we dont have useless commits that clutter.just one commit per logical change
cons:at times you tend to be forgetful 
Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

at times we work with files that are connected with each other. version control systems like google docs deal with unrelated independent files

How can you use the commands git log and git diff to view the history of files?

git log : shows all the commits a,their corresponding commit ids,author,date and commit messages ; showing newest first
git diff : shows the lines that were added ++ and deleted between first and second commits
git diff firstcommit_id second id

How might using version control make you more confident to make changes that
could break something?

version control always have the facility to switch between versions. 

Now that you have your workspace set up, what do you want to try using Git for?

    work with a project of different versions
